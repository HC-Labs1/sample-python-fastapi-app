name: Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: test-dev
  ECS_SERVICE: test-dev-service
  ECS_CLUSTER: test-dev
  ECS_TASK_DEFINITION_FAMILY: test-dev
  CONTAINER_NAME: test-dev

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push Docker image
      id: build-image
      env:
        IMAGE_TAG: ${{ github.sha }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker build -t $IMAGE_URI .
        docker tag $IMAGE_URI $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $IMAGE_URI
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:latest" >> $GITHUB_OUTPUT

    - name: Get current task definition
      run: |
        aws ecs describe-task-definition \
          --task-definition $ECS_TASK_DEFINITION_FAMILY \
          --region $AWS_REGION \
          --query taskDefinition \
          --output json > task-def.json

    - name: Update container image in task definition
      id: update-task-def
      run: |
        IMAGE=${{ steps.build-image.outputs.image }}
        jq --arg IMAGE "$IMAGE" --arg CONTAINER "${{ env.CONTAINER_NAME }}" '
          .containerDefinitions |= map(
            if .name == $CONTAINER then .image = $IMAGE else . end
          ) |
          {family, taskRoleArn, executionRoleArn, networkMode, containerDefinitions, requiresCompatibilities, cpu, memory}
        ' task-def.json > new-task-def.json

    - name: Register new task definition and deploy
      run: |
        NEW_TASK_DEF_ARN=$(aws ecs register-task-definition \
          --cli-input-json file://new-task-def.json \
          --region $AWS_REGION \
          --query 'taskDefinition.taskDefinitionArn' \
          --output text)

        echo "Registered task def: $NEW_TASK_DEF_ARN"

        aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service $ECS_SERVICE \
          --task-definition $NEW_TASK_DEF_ARN \
          --region $AWS_REGION \
          --force-new-deployment
