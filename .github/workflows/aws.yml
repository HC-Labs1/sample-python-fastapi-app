name: Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1                 
  ECR_REPOSITORY: test-dev
  ECS_SERVICE: test-dev-service
  ECS_CLUSTER: test-dev
  ECS_TASK_DEFINITION: test-dev
                                               
  CONTAINER_NAME: test-dev         
                                               

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Get current task definition JSON from AWS
      run: aws ecs describe-task-definition --task-definition test-dev:2 --region us-east-1 > task-def.json

    - name: Update image in task definition JSON
      id: task-def
      run: |
        IMAGE=${{ steps.build-image.outputs.image }}
        # Update container image with jq; assumes containerDefinitions[0] is your container
        jq --arg IMAGE "$IMAGE" '.containerDefinitions[0].image=$IMAGE |
            {family, taskRoleArn, executionRoleArn, networkMode, containerDefinitions, requiresCompatibilities, cpu, memory}' task-def.json > new-task-def.json
      shell: bash

    - name: Deploy new task definition to ECS
      run: |
        NEW_TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://new-task-def.json --region ${{ env.AWS_REGION }} --query 'taskDefinition.taskDefinitionArn' --output text)
        echo "New task definition ARN: $NEW_TASK_DEF_ARN"

        aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_SERVICE }} --task-definition $NEW_TASK_DEF_ARN --force-new-deployment --region ${{ env.AWS_REGION }}
      shell: bash
